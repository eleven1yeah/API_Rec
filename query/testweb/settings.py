
"""
Django settings for testweb project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
#  用于绑定项目文件位置的绝对路径(动态计算出来的)，所有文件夹都依赖于此路径
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--nu!j-c_=5s03=w*yango6h0in%kq7@e932qy_heys(%(ek4b*'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG项目的启动模式：
# 1.True:调试模式
#     检测代码改动后，立即重启服务
#     显示报错页面，便于查找错误
# 2.False:正式启动模式或者上线模式
#     不显示错误信息，改为False时，需要指定ALLOWED_HOSTS来过滤一些错误的请求
DEBUG = True
# 请求头Host头，有效的过滤一些请求，DEBUG = False必须配置
# ALLOWED_HOSTS = []
#[]空列表，表示只有请求头中host为127.0.0.1，localhost能访问本项目，-DEBUG=True时有效
#['*']，表示任何请求头的host都能访问当前项目
#['192.168.1.3','127.0.0.1']，表示只有当前两个host的值才能访问当前项目

# 如果要在局域网其它主机也能访问此主机的Django服务，需要更改启动方式如下：
# 1. 启动服务方式应该改为 py manage.py runserver 0.0.0.0:xxxx
# 2. 指定网络设备，如果内网环境下其它主机想访问该站点，需要添加ALLOWED_HOSTS=['内网IP']，否则访问进不来
# 3. 通过在Linux终端命令中 ifconfig查看内网IP地址;windows终端中通过ipconfig查看内网IP地址

ALLOWED_HOSTS = ['*',]


# Application definition

#注册Django应用
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

#注册中间件
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#表明Django主路由的位置
ROOT_URLCONF = 'testweb.urls'

#指定模板配置信息
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join (BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

STATICFILES_DIRS = (

    os.path.join(BASE_DIR, 'static'),
)


#正式启动的时候会用
WSGI_APPLICATION = 'testweb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
#数据库配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/
#语言信息配置
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
